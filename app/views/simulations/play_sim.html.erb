<div class="container">
  <div class="row">
    <div class="col-xs-5 col-sm-5 col-md-5 col-lg-5">
      <h2 class="white" style="font-weight: bold">You are playing <%= @simulation.name %></h2>
    </div>
    <div class="col-xs-6 col-sm-6 col-md-5 col-lg-5 col-md-offset-1 col-lg-offset-1">
      <div class="budget_div">
        <div class="row">
          <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
            <h3 id="user_budget_header" class="top-bottom-nil-margin">Budget</h3>
          </div>
          <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 col-xs-offset-3 col-sm-offset-3 col-md-offset-3 col-lg-offset-3">
            <h4 class="top-bottom-nil-margin"> Rs. <span id="user_budget"><%= @simulation_user_data.budget_available %></span>
              (in 0000's)
            </h4>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row" style="padding-top: 5%">
    <div class="col-xs-5 col-sm-5 col-md-5 col-lg-5">
      <div class="row">
        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
          <h3 class="white" style="font-weight: bold">Instructions</h3>
        </div>
      </div>
      <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
          <p class="white" id="instruction_text">
            Objective: Achieving Maximum GRPs with the least CPRPs possible <br>
            Your budget is displayed on the top right <br><br>
            How to play!
              <ol class="white" style="margin-top: -37%; font-weight: bold;">
                <li>Click on 'Download Excel' to download the excel sheet containing the TAM data.</li>
                <li>Go through the data and analyze it.</li>
                <li>Select the dates from the drop-down menu on your right.</li>
                <li>Select the program.</li>
                <li>Enter the number of slots you plan to buy.</li>
                <li>REMEMBER, You can buy only 1 slot for a 30-minute program.</li>
                <li>Click 'Submit' once you finish entering the required slots.</li>
                <li>Now review your media plan against the ideal one.</li>
              </ol>
          </p>
        </div>
      </div>
      <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
          <% if @simulation.excel_file.blank? %>
              <%= link_to 'Download Excel',  "#", :class=>"btn btn-lg button_style", :style => "font-size: 1.4em;" %>
          <% else %>
              <%= link_to 'Download Excel',  @simulation.excel_file.url, :class=>"btn btn-lg button_style", :style => "font-size: 1.4em;" %>
          <% end %>
        </div>
      </div>
    </div>
    <div class="col-xs-6 col-sm-6 col-md-5 col-lg-5 col-md-offset-1 col-lg-offset-1">
      <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
          <h4 style="float: left; width: 22%;" class="text-center">Select Date</h4>
          <h4 style="float: left; width: 45%;" class="text-center">Select Program</h4>
          <h4>No. of Slots</h4>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12 col-lg-12 col-xs-12 col-sm-12">
          <%#= flash[:notice].blank? %>
          <%# if flash[:notice].blank? %>
            <!--not-->
          <%# else %>
              <%# if flash[:notice].include?("sign")!=false %>
                <!--<div style="color: red; text-align: center;"><%#= flash[:notice] %></div>-->
              <%# end %>
          <%# end %>
          <div class="program-wall">
            <div class="row">
              <%= nested_form_for @simulation do |f| %>
                  <div id="sud">
                    <%#= f.fields_for @simulation_user_data do |sim_user_data| %>
                        <%#= sim_user_data.hidden_field :simulation_id, :value=>@simulation.id %>
                        <%#= sim_user_data.hidden_field :user_id, :value=>current_user.id %>
                    <%# end %>
                  </div>
                  <% if @simulation.errors.any? %>
                      <div id="error_explanation">
                        <h2><%= pluralize(@simulation.errors.count, "error") %> prohibited this article from being saved:</h2>

                        <ul>
                          <% @simulation.errors.full_messages.each do |msg| %>
                              <li><%= msg %></li>
                          <% end %>
                        </ul>
                      </div>
                  <% end %>
                  <%= hidden_field_tag 'sim_user_data_budget_available', @simulation_user_data.budget_available %>
                  <div id="usd">
                    <%= f.fields_for :user_sim_datums do |user_sim_data| %>
                        <% if user_sim_data.object.id.nil? %>
                            <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                              <%#= select_tag 'programme_performance_date', options_for_select(@simulation_dates.collect{ |u| [u.performance_date, u.id] }), class: 'chosen-select' %>
                              <%= select_tag "programme_performance_date", options_for_select(@simulation_dates), { class: 'chosen-select', :onchange => 'get_this_date_slots($(this))' } %>
                            </div>
                            <%= user_sim_data.hidden_field :user_id, :value => current_user.id %>
                            <div class="col-xs-5 col-sm-5 col-md-5 col-lg-5" style="margin-left: 3%">
                              <%#= user_sim_data.select :simulation_datum_id, @simulation_data.map { |u| ["#{u.programme_name} - #{u.start_time.strftime("%T")}", u.id] }, { include_blank: false }, { class: 'chosen-select dropdown_class', :onchange => 'get_cost($(this))' }%>
                              <%= user_sim_data.select :simulation_datum_id, @simulation_data.map { |u| ["#{u.programme_name} - #{u.start_time.strftime("%T")}", u.id] }, { include_blank: false }, { class: 'chosen-select dropdown_class', :onchange => 'get_cost_only_for_change($(this))' } %>
                            </div>
                            <div class="col-xs-2 col-sm-2 col-md-2 col-lg-2" style="margin-left: 10%;">
                              <%= user_sim_data.text_field :no_of_slots, {class: 'form-control slot_number', :onkeyup=>"calculate_budget(event, $(this))"} %>
                            </div>
                            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1">
                              <%= user_sim_data.link_to_remove '<span class="glyphicon glyphicon-trash icon_style" style="font-size: 1.3em;padding: 10px 10px 10px 0;"></span>'.html_safe, :onclick=>"calculate_budget_on_remove(event, $(this))" %>
                            </div>
                        <% end %>
                    <% end %>
                  </div>

                  <%= f.link_to_add "Add", :user_sim_datums, :class=>"btn btn-lg button_style", :style=>"position: absolute; bottom: -18%; left: 15px; font-size: 1.4em;" %>
                  <%= f.submit "Submit", :class => "btn btn-lg button_style", :style=>"position: absolute; bottom: -18%; right: 15px; font-size: 1.4em;" %>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>



<!--Budget :- <span id="user_budget"> <%#= @simulation_user_data.budget %> </span>-->

<%#= nested_form_for @simulation do |f| %>


<%#= f.fields_for :user_sim_datums do |user_sim_data| %>

<%#= user_sim_data.hidden_field :user_id, :value => current_user.id %>

<!--<label>Select Programme</label>-->
<%#= user_sim_data.select :simulation_datum_id, @simulation_data.map { |u| ["#{u.programme_name} - #{u.start_time.strftime("%T")}", u.id] }, { include_blank: false }, { class: 'chosen-select'} %>
<%#= user_sim_data.select :simulation_datum_id, @simulation_data.map { |u| ["#{u.programme_name} - #{u.start_time.strftime("%T")}", u.id] }, { include_blank: false }, { class: 'chosen-select' , :onchange => 'get_cost($(this))' }%>

<%#= f.label :no_of_slots %>
<%#= user_sim_data.text_field :no_of_slots, {:onkeyup=>"calculate_budget($(this))", :onfocus=>"get_my_dropdown_val($(this))"} %>
<%#= user_sim_data.text_field :no_of_slots, {:onfocus=>"get_my_dropdown_val($(this))"} %>

<%#= @simulation_data.map { |u| "#{u.cost_per_slot}" }%>

<%#= user_sim_data.link_to_remove "Remove this task" %>
<%# end %>
<!--<p><%#= f.link_to_add "Add a task", :user_sim_datums %></p>-->

<%#= f.submit "Submit", :class => "btn" %>
<%# end %>

<script>
    var user_budget_manipulated, user_budget_real, user_budget_manipulated_keep_for_dd_change;
    var simulation_id = <%= @simulation.id %>
    var cost_per_slot;
    var tvr, cprp;
    var total_thing = 0;
    var this_dropdown_val=0;
    var na = "";
    $(function(){

        //user_budget = $("#user_budget").text();
        user_budget_manipulated = <%= @simulation_user_data.budget_available %>
                user_budget_real = <%= @simulation_user_data.budget %>



//      $(".chosen-select").chosen().change(function(event){
//
//          if(event.target == this){
//
//              var this_selected_val = $(this).val();
//              //console.log("this_selected_val :- " + this_selected_val)
//
//              var data = {simulation_id:[], simulation_data_id: []};
//              data["simulation_id"].push(simulation_id);
//              data["simulation_data_id"].push(this_selected_val);
//              $.ajax({
//                  url: "/get_cost",
//                  type: "post",
//                  async: false,
//                  data: JSON.stringify(data),
//                  contentType: "application/json",
//                  success: function (data) {
//                      console.log(data[0].cost_per_slot);
//                      cost_per_slot = data[0].cost_per_slot;
//                      console.log("cost_per_slot :- " + cost_per_slot)
//                  }
//              })
//          }
//      });

    });

    function get_this_date_slots(this_obj){

        var this_date = $(this_obj).val();

        var data = {simulation_id:[], this_date: []};
        data["simulation_id"].push(simulation_id);
        data["this_date"].push(this_date);

        $.ajax({
            url: "/get_this_date_slots",
            type: "post",
            async: false,
            data: JSON.stringify(data),
            contentType: "application/json",
            success: function (data) {
                console.log(data);
                var this_field_channel_dropdown = $(this_obj).parent().parent().find('.dropdown_class');
                //console.log($(this_field_channel_dropdown));
                $(this_field_channel_dropdown).empty();
                $(this_field_channel_dropdown).trigger("chosen:updated");
                var channel_name_and_start_time;
                $.each( data, function( key, value ) {
                    //channel_name_and_start_time = value.programme_name + " " + value.start_time;
                    channel_name_and_start_time = value[1] + " - " + value[2];
                    $(this_field_channel_dropdown).append("<option value='"+value[0]+"'>"+channel_name_and_start_time+"</option>");
                });
                $(this_field_channel_dropdown).trigger("chosen:updated");
            }
        })
    }

    function get_cost(this_obj){
        //console.log($(this_obj));
        var this_val = $(this_obj).val();
        var this_text_field = $(this_obj).parents(".fields").find('.form-control');
        console.log("---- in get_cost() ------");
        console.log("this_val :- " + this_val);

        var data = {simulation_id:[], simulation_data_id: []};
        data["simulation_id"].push(simulation_id);
        data["simulation_data_id"].push(this_val);
        $.ajax({
            url: "/get_cost",
            type: "post",
            async: false,
            data: JSON.stringify(data),
            contentType: "application/json",
            success: function (data) {
                console.log(data.cost_per_slot);
                cost_per_slot = data.cost_per_slot;
                tvr = data.tvr;
                console.log("tvr :- " + tvr);
                cprp = parseInt(cost_per_slot/tvr);
                console.log("cprp :- " + cprp);
                //get_this_select_text_and_update_budget($(this_obj), $(this_text_field));
            }
        })
    }

    function get_cost_only_for_change(this_obj){


        console.log("------ get_cost_only_for_change() -----");
        //console.log("user_budget_manipulated :- " + user_budget_manipulated);
        var this_dropdown, this_dropdown_val;
        var this_text_field, this_text_field_val;
        var this_cost_per_slot, this_text_field_val;
        this_dropdown = $(this_obj);
        console.log("this_dropdown");
        console.log(this_dropdown);
        this_dropdown_val = this_dropdown.val();
        //console.log(this_dropdown);
        //console.log("this_dropdown_val :- " + this_dropdown_val);
        this_text_field = $(this_obj).parents(".fields").find('.form-control');
        console.log("THIS_TEXT_FIELD");
        this_text_field_val = this_text_field.val();
        console.log("this_text_field_val :- " + this_text_field_val);
        console.log("BEFORE KEYUP");
        console.log("$(this_obj).parent().parent()");
        console.log($(this_obj).parent().parent().is(':visible'));
        if ($(this_obj).parent().parent().is(':visible')) {
            $(this_obj).parent().next().find('input[type=text]').keyup()
        }


        if (na=="Not allowed"){
            console.log("na :- " + na)

            var this_slot, this_select;
            var total_cost = 0, total_thing = 0;
            var individual_cost_per_slot=0;
            $('#usd').find('.fields:visible').each(function(index, ele) {
                this_slot = $(ele).find("input.form-control[type=text]").val();
                this_select = $(ele).find(".dropdown_class");
                console.log($(this_select));


                if (this_slot!="") {
                    get_cost($(this_select));
                    //console.log("cost_per_slot :- " + cost_per_slot);
                    individual_cost_per_slot = cost_per_slot;
                    //console.log("(this_slot*cost_per_slot) :- " + (this_slot*cost_per_slot));
                    total_thing = total_thing + (this_slot*individual_cost_per_slot);
                    //total_cost = total_cost + cost_per_slot;
                    //console.log("in calculate_budget cost per slot :- " + cost_per_slot);
                    //console.log("this_slot :- " + this_slot);
                    //total_slots = parseInt(total_slots) + parseInt(this_slot);
                }
                else{
                    this_slot = 0;
                    console.log("this slot blank");
                }

            });
            console.log("total_thing :- " + total_thing);
            user_budget_manipulated = user_budget_real - (total_thing);
            $("#user_budget").text(user_budget_manipulated);

        }
        else{
            console.log("proceed");


            var data = {simulation_id:[], simulation_data_id: []};
            data["simulation_id"].push(simulation_id);
            data["simulation_data_id"].push(this_dropdown_val);
            $.ajax({
                url: "/get_cost",
                type: "post",
                async: false,
                data: JSON.stringify(data),
                contentType: "application/json",
                success: function (data) {
                    this_cost_per_slot = data.cost_per_slot;
                    console.log("this_cost_per_slot :- " + this_cost_per_slot);
                    console.log("user_budget_manipulated :- " + user_budget_manipulated);
                    console.log("cal :- " + this_text_field_val*this_cost_per_slot);

                    var this_slot, this_select;
                    var total_cost = 0, total_thing = 0;
                    var individual_cost_per_slot=0;
                    var field_child;
                    $('#usd').find('.fields:visible').each(function(index, ele) {
                        field_child =  $(ele).children();
                        if ( $(field_child).length > 0 ) {
                            this_slot = $(ele).find("input.form-control[type=text]").val();
                            this_select = $(ele).find(".dropdown_class");
                            console.log($(this_select));


                            if (this_slot!="") {
                                get_cost($(this_select));
                                //console.log("cost_per_slot :- " + cost_per_slot);
                                individual_cost_per_slot = cost_per_slot;
                                //console.log("(this_slot*cost_per_slot) :- " + (this_slot*cost_per_slot));
                                total_thing = total_thing + (this_slot*individual_cost_per_slot);
                                //total_cost = total_cost + cost_per_slot;
                                //console.log("in calculate_budget cost per slot :- " + cost_per_slot);
                                //console.log("this_slot :- " + this_slot);
                                //total_slots = parseInt(total_slots) + parseInt(this_slot);
                            }
                            else{
                                this_slot = 0;
                                console.log("this slot blank");
                            }
                        }


                    });
                    console.log("total_thing :- " + total_thing);
                    user_budget_manipulated = user_budget_real - (total_thing);
                    $("#user_budget").text(user_budget_manipulated);
//                user_budget_manipulated_keep_for_dd_change = user_budget_manipulated;

                }
            })
        }


    }

    function get_this_select_text_and_update_budget(this_select, this_text){
        var this_select_val, this_text_val, cal_b;
        this_select_val = $(this_select).val();
        this_text_val = $(this_text).val();

        console.log("in get_this_select_text_and_update_budget");
        console.log("this_select val :- " + this_select_val);
        console.log("this_text val :- " + this_text_val);
        console.log("cost_per_slot :- " + cost_per_slot);
        if (this_text_val!="") {
            console.log("check here");
            console.log("this_dropdown_val :- " + this_dropdown_val);
            console.log("user_budget_manipulated :- " + user_budget_manipulated);

            console.log("--- this_select_val :- " + this_select_val);
            console.log("--- this_dropdown_val :- " + this_dropdown_val);
            if (this_select_val!=this_dropdown_val){
                cal_b = this_text_val*cost_per_slot;
                console.log("cal_b :- " + cal_b);
                console.log("apply this budget :- " + (user_budget_manipulated-cal_b));
                user_budget_manipulated = (user_budget_manipulated-cal_b);
                $("#user_budget").text(user_budget_manipulated);
            }
            else{
                if (user_budget_manipulated_keep_for_dd_change!=undefined){
                    console.log("user_budget_manipulated_keep_for_dd_change :- " + user_budget_manipulated_keep_for_dd_change)
                    user_budget_manipulated = user_budget_manipulated_keep_for_dd_change;
                    console.log("user_budget_manipulated :- " + user_budget_manipulated);
                    $("#user_budget").text(user_budget_manipulated);
                }

            }



//            var this_slot, this_select_e;
//            $('#usd').find('.fields:visible').each(function(index, ele) {
//                this_slot = $(ele).find("input.form-control[type=text]").val();
//                this_select_e = $(ele).find(".chosen-select");
//
//            });

        }
        else{
            console.log("please enter no_of_slots");
        }
    }



    function calculate_budget(event, this_obj){

        console.log("----- in calculate_budget -----");
        var this_val = $(this_obj).val();
        console.log("$(this_obj) :- ");
        console.log($(this_obj));
        this_dropdown_val = $(this_obj).parents(".fields").find('.dropdown_class').val();
        console.log("this_dropdown_val :- " + this_dropdown_val);
        //this_dropdown_val
        console.log("this_val :- " + this_val);

        if(parseInt(this_val) < 0 || isNaN(this_val)) {
            console.log("please enter valid values");
            $(this_obj).val("");
            $(this_obj).focus();
        }
        else{ //main else starts
            console.log("======================================");
            console.log("check entered value");
            console.log("entered value :- " + this_val);
            console.log("simulation_id :- " + simulation_id);

            var data = {simulation_id:[], simulation_data_id: []};
            data["simulation_id"].push(simulation_id);
            data["simulation_data_id"].push(this_dropdown_val);
            $.ajax({
                url: "/get_duration",
                type: "post",
                async: false,
                data: JSON.stringify(data),
                contentType: "application/json",
                success: function (data) {
                    //console.log("data");
                    var this_program_duration = data.duration;
                    console.log("this_program_duration :- " + this_program_duration);
                    console.log("this_program_duration/30 :- " + this_program_duration/30);
                    var min_no_of_slots_reqd = Math.ceil(this_program_duration/30);
                    //console.log("Math.ceil(min_no_of_slots_reqd) :- " + Math.ceil(min_no_of_slots_reqd))
                    //console.log(this_program_duration%60);
                    console.log("+++++++++++");
                    if (this_val > min_no_of_slots_reqd) {
                        console.log("Not allowed");
                        $(this_obj).val("");
                        $(this_obj).focus();
                        na = "Not allowed";
                        return false;
                    }
                    else{ //duration else starts
                        console.log("allowed");

                        //      console.log("user_budget_manipulated :- " + user_budget_manipulated);
                        //      console.log("cost_per_slot :- " + cost_per_slot);

                        //console.log("event.keyCode :- " + event.keyCode);
                        //console.clear();

                        var total_slots = 0;
                        var this_slot, this_select, total_cost = 0, total_thing = 0;
                        var this_tvr = 0, total_tvr = 0;


                        //allow only numbers
                        console.log("event.keyCode :- " + event.keyCode);

                        if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105)) {
                            console.log("allow");
                            console.log("this_val :- " + this_val);

                            console.log("check for -ve user_budget_manipulated in allow :- " + user_budget_manipulated);
                            if (user_budget_manipulated < 0) {
                                $("#user_budget").css({"color": "red"});
                            }
                            else {
                                $("#user_budget").css({"color": "white"});
                            }

                            $('#usd').find('.fields:visible').each(function (index, ele) {
                                this_slot = $(ele).find("input.form-control[type=text]").val();
                                this_select = $(ele).find(".dropdown_class");
                                //console.log($(this_select));


                                if (this_slot != "") {
                                    get_cost($(this_select));
                                    //console.log("(this_slot*cost_per_slot) :- " + (this_slot*cost_per_slot));
                                    total_thing = total_thing + (this_slot * cost_per_slot);
                                    //total_cost = total_cost + cost_per_slot;
                                    //console.log("in calculate_budget cost per slot :- " + cost_per_slot);
                                    //console.log("this_slot :- " + this_slot);
                                    //total_slots = parseInt(total_slots) + parseInt(this_slot);
                                }
                                else {
                                    this_slot = 0;
                                    console.log("this slot blank");
                                }

                            });
                            user_budget_manipulated = user_budget_real - (total_thing);
                            user_budget_manipulated_keep_for_dd_change = user_budget_manipulated;
                            console.log("check for -ve user_budget_manipulated after compute :- " + user_budget_manipulated);
                            $("#user_budget").text(user_budget_manipulated);
                            $("#sim_user_data_budget_available").val(user_budget_manipulated);
                            if (user_budget_manipulated < 0) {
                                $("#user_budget").css({"color": "red"});
                            }
                            else {
                                $("#user_budget").css({"color": "white"});
                            }
                        }
                        else {
                            console.log("don't allow");
                            this_slot = 0;
                            console.log("total_thing :- " + total_thing);
                            console.log("user_budget_manipulated :- " + user_budget_manipulated);


                            $('#usd').find('.fields').each(function (index, ele) {
                                this_slot = $(ele).find("input.form-control[type=text]").val();
                                if (this_slot == "") {
                                    user_budget_manipulated = user_budget_real;
                                    $("#user_budget").text(user_budget_manipulated);
                                    $("#sim_user_data_budget_available").val(user_budget_manipulated);
                                }
                            });
                            if ((event.keyCode != 17) || (event.keyCode != 27)) {
                                console.log("event.keyCode da :- " + event.keyCode)

                                var keycode = (event.which) ? event.which : event.keyCode;
                                console.log("keycode :- " + keycode)


//                //comparing pressed keycodes
                                if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
                                    console.log("no");
                                    //return false;
                                }
                                else {
                                    console.log("yes");
                                    $('#usd').find('.fields:visible').each(function (index, ele) {
                                        this_slot = $(ele).find("input.form-control[type=text]").val();
                                        this_select = $(ele).find(".dropdown_class");

                                        if (this_slot != "") {
                                            console.log("this_slot not blank");
                                            get_cost($(this_select));
                                            console.log("cost_per_slot in this_slot not blank :- " + cost_per_slot);
                                            total_thing = total_thing + (this_slot * cost_per_slot);
                                            console.log("total_thing in this_slot not blank :- " + total_thing);
                                            console.log("user_budget_manipulated in this_slot not blank :- " + user_budget_manipulated);
                                            user_budget_manipulated = user_budget_real - (total_thing);
                                            console.log("user_budget_manipulated in this_slot not blank after cal :- " + user_budget_manipulated);
                                            $("#user_budget").text(user_budget_manipulated);
                                            $("#sim_user_data_budget_available").val(user_budget_manipulated);
                                            if (user_budget_manipulated < 0) {
                                                $("#user_budget").css({"color": "red"});
                                            }
                                            else {
                                                $("#user_budget").css({"color": "white"});
                                            }
                                            //user_budget_manipulated = total_thing + cost_per_slot;
                                            //console.log("user_budget_manipulated in this slot blank :- " + user_budget_manipulated);
                                            //total_thing = total_thing + (this_slot*cost_per_slot);
                                            //console.log("user_budget_manipulated in this_slot blank :- " + user_budget_manipulated)
                                            //user_budget_manipulated = user_budget_manipulated + cost_per_slot;
                                            //console.log("user_budget_manipulated in this_slot blank after adding :- " + user_budget_manipulated)
                                            //$("#user_budget").text(user_budget_manipulated);
                                        }
                                    });
                                }


                            }


                            //console.log("user_budget_manipulated :- " + user_budget_manipulated);

                            //total_thing = total_thing + (this_slot*cost_per_slot);
                            //console.log("total_thing :- " + total_thing);
                            //user_budget_manipulated = user_budget_real - (total_thing);
                            //console.log("user_budget_manipulated :- " + user_budget_manipulated);
                            //$("#user_budget").text(user_budget_manipulated);
//            user_budget_manipulated = user_budget_real;
                        }

                        //console.log("total_thing :- " + total_thing);

                        //user_budget_manipulated = user_budget_real - (total_thing);
                        //$("#user_budget").text(user_budget_manipulated);
                        //$("#sim_user_data_budget_available").val(user_budget_manipulated);

                        //console.log("total_cost :- " + total_cost);
                        //console.log("total_slots :- " + total_slots);


                        //working code starts from here
                        //      console.log("user_budget_manipulated :- " + user_budget_manipulated);
                        //
                        //      if ( (event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) ) {
                        //          console.log("allow");
                        //          user_budget_manipulated = user_budget_real - (this_val*cost_per_slot);
                        //      }
                        //      else{
                        //          console.log("don't allow");
                        //          if (event.keyCode == 8 || event.keyCode == 46) {
                        //              if (this_val==""){
                        //              console.log("blank");
                        //              user_budget_manipulated = user_budget_real;
                        //          }
                        //          else{
                        //              console.log("backspace or delete :- " + this_val);
                        //              user_budget_manipulated = user_budget_real - (this_val*cost_per_slot);
                        //          }
                        //          }
                        //      }
                        //      console.log("user_budget_manipulated :- " + user_budget_manipulated);
                                                //$("#user_budget").text(user_budget_manipulated);
                                                //working code ends here

                                                //user_budget_manipulated = user_budget_manipulated - (this_val*cost_per_slot);

                        //      if (event.keyCode == 8 || event.keyCode == 46) {
                        //          if (this_val==""){
                        //              console.log("blank");
                        //              user_budget_manipulated = user_budget_real;
                        //          }
                        //          else{
                        //              console.log("backspace or delete :- " + this_val);
                        //              user_budget_manipulated = user_budget_real - (this_val*cost_per_slot);
                        //          }
                        //      }
                        //      else{
                        //          user_budget_manipulated = user_budget_manipulated - (this_val*cost_per_slot);
                        //      }


                        //      $("#user_budget").text(user_budget_manipulated);
                    }
                }
            });


        }

    }

    function calculate_budget_on_remove(event, this_obj){
        console.log("on remove text val");
        var this_slot, this_select;
        var this_slot_hidden, this_select_hidden, cost_per_slot_hidden, total_thing_hidden = 0;

        //console.log($(this_obj).parents(".fields").find('.form-control').val());
        //console.log($(this_obj).parents(".fields").find('.chosen-select'));

        this_slot_hidden = $(this_obj).parents(".fields").find('.form-control').val();
        //this_select_hidden = $(this_obj).parents(".fields").find('.chosen-select');
        this_select_hidden = $(this_obj).parents(".fields").find('.dropdown_class');
        get_cost($(this_select_hidden));
        cost_per_slot_hidden = cost_per_slot;
        total_thing_hidden = total_thing_hidden + (this_slot_hidden*cost_per_slot_hidden);
        console.log("total_thing_hidden :- " + total_thing_hidden);

        setTimeout(function() {
            console.log("remaining fields len :- " + $('#usd').find('.fields:visible').length);

//            $('#usd').find('.fields:hidden').each(function(index, ele) {
//                this_slot_hidden = $(ele).find("input.form-control[type=text]").val();
//                this_select_hidden = $(ele).find(".chosen-select");
//                get_cost($(this_select_hidden));
//                cost_per_slot_hidden = cost_per_slot;
//                console.log("cost_per_slot :- " + cost_per_slot);
//                total_thing_hidden = total_thing_hidden + (this_slot_hidden*cost_per_slot_hidden);
//
//            });
//            console.log("total_thing_hidden :- " + total_thing_hidden);

            $('#usd').find('.fields:visible').each(function(index, ele) {
                this_slot = $(ele).find("input.form-control[type=text]").val();
                this_select = $(ele).find(".dropdown_class");
                //.chosen-select -> .dropdown_class

                //console.log("this_slot :- ");
                //console.log(this_slot);
                //console.log("this_select :- ");
                //console.log(this_select);

                if (this_slot!="") {
                    get_cost($(this_select));
                    console.log("this_slot :- " + this_slot);
                    console.log("cost_per_slot :- " + cost_per_slot);
                    total_thing = total_thing + (this_slot*cost_per_slot);


                    //user_budget_manipulated = user_budget_real - (total_thing);
                    //total_cost = total_cost + cost_per_slot;
                    //console.log("in calculate_budget cost per slot :- " + cost_per_slot);
                    //console.log("this_slot :- " + this_slot);
                    //total_slots = parseInt(total_slots) + parseInt(this_slot);
                }

                //user_budget_manipulated = user_budget_manipulated + (total_thing_hidden);
                //console.log("user_budget_manipulated after compute :- " + user_budget_manipulated);
//                console.log("check for -ve user_budget_manipulated after compute :- " + user_budget_manipulated);
//                $("#user_budget").text(user_budget_manipulated);
            });
            console.log("total_thing :- " + total_thing);
            console.log("user_budget_manipulated here :- " + user_budget_manipulated);
            user_budget_manipulated = user_budget_manipulated + total_thing_hidden;
            console.log("user_budget_manipulated after compute :- " + user_budget_manipulated);
            $("#user_budget").text(user_budget_manipulated);
            $("#sim_user_data_budget_available").val(user_budget_manipulated);
        }, 100);



//        $('#usd').find('.fields').each(function(index, ele) {
//            this_slot = $(ele).find("input.form-control[type=text]").val();
//            this_select = $(ele).find(".chosen-select");
//        });

//        get_cost($(this_obj).parents(".fields").find('.chosen-select'));
//        console.log("cost_per_slot after remove :- " + cost_per_slot);
//        console.log("total_thing after remove :- " + total_thing);
//        console.log("user_budget_manipulated after remove :- " + user_budget_manipulated);
//        user_budget_manipulated = user_budget_manipulated +  total_thing;
//        console.log("user_budget_manipulated after remove cal :- " + user_budget_manipulated);
//        $("#user_budget").text(user_budget_manipulated);

    }

    function get_my_dropdown_val(this_obj){
        console.log("in get_my_dropdown_val()");
        //console.log($(this_obj).parents(".fields").attr("class"));
        var this_dropdown_val = $(this_obj).parents(".fields").find('.dropdown_class option:selected').val();
        //console.log("this_dropdown_val :- " + this_dropdown_val);
        get_cost($(this_obj).parents(".fields").find('.dropdown_class'));
    }

    $('a.add_nested_fields').on('click', function(){
        console.log("add clicked");
        window.NestedFormEvents.prototype.insertFields = function(content, assoc, link) {
            var target = $('#usd');
            return $(content).appendTo(target);
        }

    });

    $('form').on('nested:fieldAdded', function(event) {
        $(event.target).find('.chosen-select').chosen();
        $(event.target).find('.chosen-select option').eq(0).attr('selected', 'selected');
        //get_cost($(event.target).find('.chosen-select'));
        //$('#chosen-select option').eq(index).attr('selected', 'selected');
    });

</script>